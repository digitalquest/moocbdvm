#+TITLE: Manuel de la Box Vagrant du MOOC BD
#+AUTHOR: Stéphane Germain, Olivier Berger
#+OPTIONS: html-link-use-abs-url:nil html-postamble:t
#+OPTIONS: html-preamble:t html-scripts:t html-style:t
#+OPTIONS: html5-fancy:nil tex:t
#+OPTIONS: num:2 timestamp:t
#+CREATOR: Copyright (C) 2014, The authors and Institut Mines-Télécom
#+HTML_CONTAINER: div
#+HTML_DOCTYPE: xhtml-strict
#+HTML_HEAD:
#+HTML_HEAD_EXTRA:
#+HTML_LINK_HOME:
#+HTML_LINK_UP:
#+HTML_MATHJAX:
#+INFOJS_OPT:
#+LATEX_HEADER:
#+LANGUAGE: fr

* TL/DR;

*Pour le lecteur pressé, lire : [[./TLDR.html][Prise en main rapide de la Box Vagrant du MOOC BD Télécom SudParis]].*

* Introduction

** Contexte : Travail Personnel dans le MOOC BD

Nous mettons à votre disposition un environnement de travail pour les
travaux pratiques / travail personnel (TPs) du *MOOC Bases de Données Relationnelles*
 de [[http://mooc.telecom-sudparis.eu/][Télécom SudParis]], basé sur une machine virtuelle.

Cet environnement n'est pas indispensable pour les premiers exercices
de requêtes SQL en bases de données (semaines 2, 3) : un exerciseur SQL en
Javascript, s'exécutant dans certains navigateur et ne nécessitant
aucune installation, devrait être suffisant pour les premiers TPs.

Pour les cours suivants, portant sur des manipulations avancées, et la
programmation Web pour les bases de données, il sera nécessaire de
disposer d'un environnement plus complet, tel que celui basé sur
[[http://www.postgresql.org/][PostgreSQL]], que nous vous
proposons dans cette machine virtuelle.

** Environnement de travail virtualisé

L'objectif est de faire tourner, sur le poste de l'apprenant (/vous/), une
*machine virtuelle* contenant un serveur Linux dans lequel sont installés :

- un *serveur de base de donnée* (SGBDR) /PostgreSQL/ préconfiguré, dans
  lequel des bases de données d'exemples du cours ont été chargées.

- un serveur Web (Apache) permettant de fournir des applications Web
  locales utiles pour les TPs :

  - un "*exerciseur*" qui vous guidera dans l'apprentissage des requêtes
    SQL sur les bases de données d'exemples;

  - un outil professionnel de requêtage et d'administration des bases
    de données PostgreSQL : *phpPgAdmin*.

L'objectif est que vous soyez autonomes dans l'utilisation de cet
environnement installé en local sur votre ordinateur, y compris /sans
accès à internet/.

L'utilisation de *Vagrant* et *VirtualBox* pour faire tourner cet
environnement permet en théorie un même fonctionnement quelque soit
votre système d'exploitation Linux, MacOSX, Windows (à condition qu'il soit relativement
récent). Consultez cependant attentivement la section [[*Prérequis][Prérequis]].

** Compétences requises

Bien que cet environnement soit basé sur une machine virtuelle Linux, aucune
compétence en /administration système/ Unix ne devrait être nécessaire
pour pouvoir l'utiliser: l'interaction se déroulera principalement 
*dans l'interface Web* de votre navigateur, au moins pour les premiers TPs.

Cet environnement basé sur des logiciels libres est redistribuable, et
potentiellement réutilisable dans d'autre contextes, par exemple pour
votre utilisation professionelle, au-delà de ce MOOC (cf. [[*À propos de la Box Vagrant du MOOC][À propos de la Box Vagrant du MOOC]]).

** Avertissement

/Nous avons fait de notre mieux pour fournir un environnement fonctionnel, basé sur des logiciels libres, mais vous l'utilisez *à vos risques et périls, sans aucune garantie*. Nous ne pouvons être tenus responsables des dommages qui résulteraient de l'utilisation de cet environnement./

L'ensemble des sources de cet environnement sont disponibles en
logiciel libre sur XXX (sous licences XXX), y compris les outils ayant
permis la construction de la machine virtuelle.

** Glossaire

- box :: paquetage d'installation d'une /machine virtuelle/
         préconfigurée, qui est pris en charge par l'application
         /Vagrant/. Les différentes versions des box sont publiées sur
         Internet (sur =https://vagrantcloud.com/=), afin de faciliter
         leur mise-à-jour.
- exerciseur :: application destinée à faciliter l'apprentissage
- guest :: voir /machine virtuelle/
- hôte :: votre machine, avec un système d'exploitation, sur
          laquelle est installé le virtualiseur /VirtualBox/ utilisé par
          /Vagrant/ (c'est par exemple votre système /Windows 7/ habituel).
- machine virtuelle :: un système d'exploitation /virtualisé/ (ici un
     /Linux/ sur une machine fictive ayant 2.5 Go de disque et 256 Mo de
     RAM), qui est donc isolé des autres programmes de votre système
     /hôte/. Nous l'avons préinstallé avec différents
     logiciels. VirtualBox et Vagrant font fonctionner cette machine virtuelle:
     démarrage, arrêt, mise en pause, etc.
- VM :: /Virtual Machine/ voir /machine virtuelle/

* Installation

** Prérequis

# Disques : env. 1.5 Go pour les logiciels à installer (sur Windows 7) et 1.3 Go
# pour la VM instanciée

- Disposer d'une machine moderne avec un système d'exploitation 64
  bits (ou 32 bits[fn:5]) sur lequel VirtualBox\trade fonctionne[fn:2]
- Avoir un environnement internet à haut débit, le temps de télécharger l'environnement[fn:4]
- Avoir au moins 3 Go de libre sur un disque dur local
- Maîtriser un minimum l'utilisation de votre système d'exploitation,
  notamment en mode invite de commandes (commandes de base DOS ou shell
  Unix, type =cd=, =ls/dir=, etc.).

** Télécharger et installer Vagrant et VirtualBox

Vous aurez besoin d'installer Vagrant et VirtualBox, qui devraient
normalement être disponibles sur les systèmes d'exploitations les plus
populaires (Linux, Windows, Mac OS X). Le mode opératoire devrait donc
être identique pour tous, quelque soit l'OS utilisé.

/VirtualBox/ servira à faire fonctionner la virtualisation, alors que
/Vagrant/ se chargera du téléchargement de la dernière version de
l'image de machine, et de la création automatique de la machine
virtuelle, correctement paramétrée.

Téléchargez les *versions les plus récentes* de ces deux applications
depuis leurs sites, et installez-les (nécessite les privilèges
d'administration). Attention à installer une version récente :
certains paquetages officiels de distributions peuvent être obsolètes,
notamment pour Vagrant (voir sur le site de téléchargements du projet
Vagrant les paquetages pour Linux =.deb) ou =.rpm=).

Sites de téléchargement :
- *VirtualBox* : https://www.virtualbox.org/wiki/Downloads
- *Vagrant* : http://www.vagrantup.com/downloads.html (peut nécessiter
  un redémarrage, sur Windows)

Vous aurez éventuellement besoin d'installer un /client SSH/ si vous
n'en avez pas encore installé un. Sur Windows, voir l'[[*=vagrant ssh= échoue, sous Windows][entrée de FAQ]] correspondante.

** Initialisation et mise en route

Choisir un *dossier de travail* dans lequel Vagrant va installer une
*machine virtuelle*, et où les fichiers des TPs vont résider. Ce dossier
doit être choisi sur une partition disposant d'au moins 1,5 Go d'espace de
stockage libre.


# La machine virtuelle prête à l'emploi est sur vagrantcloud

Pour télécharger la /box/ Vagrant et procéder au premier lancement de de la /machine virtuelle/, suivre les étapes suivantes :

1. ouvrir un /invite de commandes/ [fn:3] dans le dossier de travail
   choisi (utiliser la commande =cd= pour s'y positionner):
2. entrer la commande suivante, selon le profil de votre matériel / système : 
   | Systèmes =64 bits=              |   | Systèmes =32 bits= (ou virtualisation |
   |                                 |   | matérielle pas disponible)            |
   |---------------------------------+---+---------------------------------------|
   | =vagrant init oberger/moocbdvm= |   | =vagrant init oberger/moocbdvm32=     |
   un fichier =Vagrantfile= est créé dans le dossier de travail :
   #+BEGIN_example
   A `Vagrantfile` has been placed in this directory. You are now
   ready to `vagrant up` your first virtual environment! Please read
   the comments in the Vagrantfile as well as documentation on
   `vagrantup.com` for more information on using Vagrant.
   #+END_EXAMPLE
3. entrer la commande suivante :
   #+BEGIN_example
   vagrant up
   #+END_EXAMPLE
   ceci va télécharger la dernière version de la [[https://vagrantcloud.com/oberger/moocbdvm][/box/ =oberger/moocbdvm=]] depuis Internet
   (env. 350 Mo), et démarrer une machine virtuelle VirtualBox
   en tâche de fond, qui fournira l'environnement que vous allez utiliser.

*ATTENTION: La mise en place peut être longue et prendre du temps sur les machines peu puissantes et/ou ne disposant pas d'une connexion internet haut-débit.*

La mise en place est terminée quand s'affichent les 4 lignes suivantes :
#+BEGIN_example
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
==> default: Mounting shared folders...
    default: /vagrant => ...CHEMIN DE VOTRE DOSSIER DE TRAVAIL...
#+END_EXAMPLE

Si tout va bien, la machine virtuelle
est visible dans l'interface d'administration de VirtualBox (et peut
être démarrée, arrêtée, ou mise en pause comme une machine virtuelle
ordinaire).

Pour une explication des commandes de base de Vagrant,
consultez
[[http://docs.vagrantup.com/v2/getting-started/index.html][le guide de démarrage vagrant (en anglais)]].

* Utilisation

La machine virtuelle doit être lancée, en tâche de fond dans VirtualBox, pour pouvoir
utiliser l'environnement de travail personnel du MOOC. 

** Lancement de la machine virtuelle

1. ouvrir un invite de commandes dans le dossier de travail;

2. entrer la commande:
   #+BEGIN_example
   vagrant up
   #+END_example
   la mise en place de la machine est finie quand s'affiche la ligne "...". Si la machine virtuelle était déjà lancée, rien ne se passe, tant mieux.

   Il se peut qu'un message affiche un avertissement si une nouvelle version de la box a été publiée depuis l'installation :
   #+BEGIN_example
   ==> default: A newer version of the box 'oberger/moocbdvm' is available! You currently
   ==> default: have version '0.1.0'. The latest is version '42.0'. Run
   ==> default: `vagrant box update` to update.
   #+END_example
   vous pouvez probablement ignorer ce message. Dans la plupart des cas, il est peu probable qu'une réinstallation de la box soit nécessaire : cf. [[*Comment mettre à jour ma machine virtuelle][Comment mettre à jour ma machine virtuelle]].

Une fois lancée, elle fournit un *serveur HTTP* qui est redirigé sur
l'adresse locale de l'ordinateur /hôte/ =localhost= (=127.0.0.1=), qui
écoute sur le *port =8080=* (d'où les URLs ci-dessous commençant par *=http://localhost:8080/=*).


** Exerciseur de requêtes SQL

Une fois la machine virtuelle lancée, ouvrir un navigateur Web et aller sur http://localhost:8080/bdsqlwiz/appli/

TODO screenshot

Vous pouvez maintenant commencer votre apprentissage du langage SQL,
en sélectionnant l'une des deux bases de données disponibles (/films/
ou /vins), puis en construisant des requêtes SQL à l'aide des outils
présents dans les différentes /frames/.

Vos requêtes seront transmises au serveur PostgreSQL qui tourne en
tâche de fond dans la VM, pour être exécutées.

** Module Web d'administration PostgreSQL /phpPgAdmin/

Le serveur Web intégré dans la VM met aussi à votre disposition
l'environnement d'administration *phpPgAdmin*. Cet environnement est
très complet et fournit notamment des outils permettant la
manipulation du /schéma des bases de données/ et l'administration du
SGBD.

- Connectez votre navigateur à l'adresse :
  http://localhost:8080/phppgadmin/

*** Requêtage

- Connectez-vous au /Serveur/ =PostgreSQL= :

  - User : =pg_reader=

  - Password : =tpinfint=

Vous pouvez désormais saisir des requêtes SQL (de consultation seulement) sur le serveur PostgreSQL.


*** Mises à jour

Connectez-vous avec utilisateur =pg_writer= au lieu de =pg_reader=
(même mot-de-passe).


*** Administration

Connectez-vous en tant qu'utilisateur /administrateur/ du SGBD (login:
=postgres=, mot de passe : =postgres=).

Bien entendu, tout est possible quand on est administrateur, donc
attention avant de tout casser.

** En ligne de commande PostgreSQL

Pour exécuter des commandes SQL sur le serveur PostgreSQL présent à l'interieur de la machine virtuelle, procéder comme suit :

1. connectez-vous dans la machine virtuelle dans le compte =vagrant=
   #+BEGIN_example
   vagrant ssh
   #+END_example
   vous devriez alors voir le /prompt/ du shell Linux (si un client SSH est disponible \--- Cf. [[*=vagrant ssh= échoue, sous Windows][FAQ]]), quelque chose du style :
   #+BEGIN_example
   Linux localhost 3.14-2-amd64 #1 SMP Debian 3.14.13-2 (2014-07-24) x86_64
   
   The programs included with the Debian GNU/Linux system are free software;
   the exact distribution terms for each program are described in the
   individual files in /usr/share/doc/*/copyright.
   
   Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent
   permitted by applicable law.
   Last login: Wed Aug 13 13:27:54 2014 from 10.0.2.2
   vagrant@localhost:~$
   #+END_example

2. lancez la commande de connexion à PostgreSQL en ligne de commande (connexion à la base =vins= en tant qu'utilisateur PostgreSQL =pg_reader= :
   #+BEGIN_example
   psql -U pg_reader vins
   #+END_example
   vous devriez alors voir le /prompt/ de l'interface ligne de commandes de PostgreSQL.
   #+BEGIN_example
   psql (9.4beta2)
   Saisissez « help » pour l'aide.
   
   vins=>
   #+END_example

** Programmation Web / BD en PHP

*** Structure de l'environnement d'exécution PHP

Les exercices de programmation de pages Web en PHP nécessitent un
serveur Web et l'interpréteur PHP. La VM contient un tel environnement
(Apache + mod_php).

Pour tester vos programmes, il faudra donc placer des fichier =.php=
dans un répertoire accessible par le serveur Web Apache.

Nous avons configuré le serveur Apache de la VM de façon à ce qu'il
puisse exécuter des scripts PHP présents dans le répertoire
=/vagrant/TP/= de la VM, le résultat devenant accessible sur
http://localhost:8080/TP/.

*** Montage d'un dossier partagé =/vagrant/TP/=

La box Vagrant est configurée de façon à ce que ce répertoire de tests
PHP corresponde au sous-répertoire "=TP/=" qui a normalement été créé
dans le dossier de travail lorsque vous avez lancé la création de la
machine virtuelle (=vagrant up= initial).

Tout le contenu du dossier de travail de l'hôte est en effet /monté/
en tant que =/vagrant/= dans la VM, comme /dossier partagé/
VirtualBox.

Par exemple, sur Windows le contenu de =C:\Users\olivier\vagrant\= serait directement
monté en tant que =/vagrant/=.

L'avantage d'un tel montage est de permettre l'édition des fichiers
*depuis l'hôte*, avec l'éditeur de texte ou l'/IDE/ préféré dans
l'environnement de bureau natif de votre système habituel, tout en
permettant les tests *en direct à l'intérieur de la VM*, sans besoin de
recopie entre les deux systèmes.

*** Mise à jour des squelettes PHP

Le sous-répertoire =TP/= devrait normalement contenir un ensemble de
squelettes de départ servant de base pour les TPs, image du contenu
mis en ligne par les enseignants. Vous pourrez faire un =git pull=
dans ce répertoire pour récupérer des mises-à-jour. Si vous n'avez pas
installé Git sur votre système hôte, vous pourrez toutefois l'utiliser depuis
l'intérieur de la VM (via une connexion SSH, en travaillant dans
=/vagrant/TP/=).


* FAQ
<<FAQ>>

** Si je n'ai que VirtualBox, puis-je me passer de l'installation de Vagrant ?

Il est possible de télécharger une /box/ Vagrant (fichier =.box=) et
d'en extraire le contenu (c'est en réalité une archive /tar/
compressée, équivalente à un =.tgz= / =.tar.gz=).

Pour télécharger le fichier, =.box=, consultez
https://vagrantcloud.com/oberger/moocbdvm/versions et récupérez l'URL
du fichier =.box= de la dernière version.
#+BEGIN_example
$ wget https://vagrantcloud.com/oberger/moocbdvm/version/.../provider/virtualbox.box
#+END_example

Pour extraire le contenu, utilisez par exemple =tar=, sous
Unix : =tar zxf virtualbox.box=.

#+BEGIN_example
$ tar ztf virtualbox.box
./Vagrantfile
./box.ovf
./include/
./include/_Vagrantfile
./box-disk1.vmdk
#+END_example

On peut en extraire un fichier de définition de machine virtuelle
VirtualBox (=./box.ovf=), ainsi que le fichier d'image de disque
(=./box-disk1.vmdk=) correspondant.

Il est alors possible d'*importer* le fichier =.ovf= dans VirtualBox, et de
redéfinir les redirections de ports appropriées, ou les partages de
dossiers (=/vagrant/=), etc.

** Je n'arrive pas à me connecter depuis la console affichée par VirtualBox

Attention : le clavier configuré par défaut, pour la console de login
affichée par VirtualBox est en disposition *azerty* (comme rappelé par
le message d'accueil affiché avant le prompt de /login/).

Une alternative à l'utilisation de la console affichée par VirtualBox,
est d'utiliser =vagrant ssh=, qui fonctionnera en principe quelque
soit votre disposition de clavier.

** Comment installer un environnement de bureau sur la VM

Normalement, vous n'aurez pas besoin d'utiliser la machine virtuelle en mode bureau graphique pour les TPs du MOOC, mais c'est cependant tout-à-fait faisable.

Nous fournissons un script de mise-à-jour permettant d'installer (en
mode superutilisateur Linux) l'environnement de bureau XFCE4,
préconfiguré en français avec clavier azerty : =/usr/local/sbin/install-gui.sh=.

Pour le lancer, rentrer la commande suivante :
#+BEGIN_example
vagrant ssh -c "sudo /usr/local/sbin/install-gui.sh"
#+END_example

Attention, ceci fait augmenter substentiellement l'occupation disque de la machine virtuelle.

** TODO Comment installer l'application exerciseur manuellement

Les sources sont disponibles depuis git avec : 
git clone http://fusionforge.int-evry.fr/anonscm/git/bdsqlwiz/bdsqlwiz.git

TBD : archive extractible .zip, dans
https://fusionforge.int-evry.fr/frs/?group_id=64

** J'ai un système 32 bits, est-ce que ça marchera pour moi ?

# Nous ne fournissons pour l'instant aucun environnement de machine
# virtuelle 32 bits. Vous devrez avoir un système d'exploitation 64 bits
# sur l'hôte pour utiliser notre /box/ 64 bits.

La version canonique sur laquelle nous avons basé nos réalisations et
nos tests de VM est la version 64 bits (architecture Linux =amd64=), qui
nécessite un hôte 64 bits.

Nous mettons également à votre disposition une version 32 bits, mais ayant fait
l'objet de tests moins poussés.

Pour l'utiliser, remplacer
=oberger/moocbdvm= par *=oberger/moocbdvm32=* dans les instructions
=vagrant init= :

#+BEGIN_example
vagrant init oberger/moocbdvm32
#+END_EXAMPLE


** TODO VirtualBox se plaint d'un problème de virtualisation matérielle

Il se peut que vous voyiez un des messages suivants dans VirtualBox :
#+BEGIN_example
"La virtualisation matérielle VT-x/AMD-V n'est pas disponible sur votre système. L'invité 64 bits ne détectera pas un processeur 64 bits et ne pourra pas démarrer."
#+END_example
ou
#+BEGIN_example
La virtualisation matérielle VT-x/AMD-V a été sélectionnée, mais n'est 
pas active. L'invité 64 bits ne détectera pas un processeur 64 bits et 
ne pourra probablement pas démarrer.

Assurez-vous que vous avez bien activé le VT-x/AMD-V dans le BIOS de 
votre ordinateur hôte.
#+END_example
et le message suivant affiché dans l'invite de commandes par Vagrant :
#+BEGIN_example
The guest machine entered an invalid state while waiting for it
to boot. Valid states are 'starting, running'. The machine is in the
'paused' state. Please verify everything is configured
properly and try again.

If the provider you're using has a GUI that comes with it,
it is often helpful to open that and watch the machine, since the
GUI often has more helpful error messages than Vagrant can retrieve.
For example, if you're using VirtualBox, run `vagrant up` while the
VirtualBox GUI is open.
#+END_example

Ceci signifie en général que vous avez essayé de lancer une VM pour la
box 64 bits alors que votre système est en 32 bits, ou que votre
processeur ne dispose pas des fonctionnalités suffisantes.

Réessayez avec la box *32 bits* : =oberger/moocbdvm32= (cf. 
[[*J'ai un système 32 bits, est-ce que ça marchera pour moi ?][J'ai un système 32 bits, est-ce que ça marchera pour moi ?]]).

** Je n'ai pas accès à Internet en haut débit

C'est bien dommage (d'autant que visionner les vidéos du MOOC doit
être pénible, dans ce cas). Cependant, vous pouvez installer de façon
indépendantes, les applications que nous avons empaquetées dans la
/box/.

Notez tout d'abord qu'un environnement d'exerciseur est disponible
aussi pour les navigateurs basés sur Webkit (Chrome, Safari), sans
nécessiter l'installation d'un SGBD comme PostgreSQL. (Cf. XXX - TODO)

Autrement, pas besoin de machine virtuelle, si vous savez installer un
SGBD par vous-même. Si vous avez la possibilité de créer une base de
données PostgreSQL localement, les scripts de création de base sont
disponibles dans XXX TODO.

# ** Il y a plein de messages en verts et rouge quand j'entre la commande =vagrant up= !

# Ce comportement est tout à fait normal et correspond à l'installation des différents composants utiles pour l'apprentissage du SQL.

** TODO Vagrant ne trouve pas de /box/ =oberger/moocbdvm=

La commande =vagrant up= renvoit un message du style :
#+BEGIN_example
There was a problem with the configuration of Vagrant. The error message(s)
are printed below:

vm:
  The box 'oberger/moocbdvm' could not be found.
#+END_example
ou bien un message du type :
#+BEGIN_example
[vagrant] Downloading with Vagrant::Downloaders::File...
[vagrant] Copying box to temporary location...
[vagrant] Extracting box...
[vagrant] Cleaning up downloaded box...
Failed to untar the box file. This is usually because you're
attempting to add a box that isn't a valid box file. Please
double check that the box file is properly packaged.
#+END_example

Vous utilisez probablement une version trop ancienne de Vagrant, alors que nous recommandons une version >= 1.6.3
(vérifiez avec =vagrant --version=).

** Le message de confirmation de mise en place ne s'affiche pas.

Reprendre les instuctions d'installation depuis le début en vérifiant que toutes les étapes ont été correctement suivies.

# Vérifier notamment que le BoxMOOCSQL est bien orthographié lors de l'utilisation de la commande.

# Se reporter au site du tp pour vérifier que le DebianBox.box et le Vagrantfile sont bien à jour tous les deux. Le cas échéant, télécharger les nouveaux DebianBox.box et Vagrantfile et recommencer l'installation.

Il peut être nécessaire de mettre à jour la box (commandes =vagrant box outdated=, etc.). Veuillez vous reporter [[*Réinstallation de la machine virtuelle][Réinstallation de la machine virtuelle]].

Si le problème persiste, contactez-nous via les forums du MOOC.

** Le premier lancement signale que la machine est vérouillée

Au premier =vagrant up=, il se peut que Vagrant affiche un message d'erreur du style :
#+BEGIN_example
Vagrant can't use the requested machine because it is locked! This
means that another Vagrant process is currently reading or modifying
the machine. Please wait for that Vagrant process to end and try
again. Details about the machine are shown below:
Name: default
Provider: virtualbox
#+END_example

Il semble que cela ne soit pas rédhibitoire : un nouveau =vagrant up= semble pouvoir régler le problème.

** Quand j'utilise la commande =vagrant up=, je vois de nombreuses lignes "default: Warning: Connection timeout. Retrying..." ou "default: Warning: Remote connection disconnect. Retrying..."

Tout d'abord, ces lignes sont tout à fait normales si leur nombre est peu élevé et correspondent au temps de démarrage de la machine.

Si l'invite de commandes en est rempli, il est conseillé d'interrompre
la commande (ctrl-C sur UNIX, XXX sur windows) et de recommencer
l'étape d'installation que vous faisiez.

** Le lancement de la VM affiche un problème de versions des /guest additions/

Il se peut qu'au démarrage de la VM, un message soit affiché, du style :
#+BEGIN_example
Checking for guest additions in VM...
The guest additions on this VM do not match the installed version of
VirtualBox! In most cases this is fine, but in rare cases it can
prevent things such as shared folders from working properly. If you see
shared folder errors, please make sure the guest additions within the
virtual machine match the version of VirtualBox you have installed on
your host and reload your VM.

Guest Additions Version: 4.3.14
VirtualBox Version: 4.1
#+END_example

A priori, ce n'est pas gênant pour le bon fonctionnement de la VM.

** La machine virtuelle est lancée, mais les pages Web sur le port 8080 ne donnent pas les résultats escomptés

Normalement, au démarrage de la machine virtuelle, Vagrant configure
une redirection (/forward/) du port =80= (HTTP) du /guest/, vers le
port =8080= de l'/hôte/, et respectivement, du port =22= (SSH) vers le
port =2222=. Il se peut qu'une telle redirection soit impossible (par
exemple si une autre application de l'hôte utilise déjà le port
=8080=, ou si une autre machine virtuelle a déjà été lancée avec une
telle redirection).

Dans ce cas, il est probable qu'un autre port aura été utilisé pour la
redirection, que =8080=.

Dans un tel cas, =vagrant up= affiche des messages su style :
#+BEGIN_example
==> default: Fixed port collision for 80 => 8080. Now on port 2200.
==> default: Fixed port collision for 22 => 2222. Now on port 2201.
...
==> default: Forwarding ports...
    default: 80 => 2200 (adapter 1)
    default: 22 => 2201 (adapter 1)
#+END_example

On voit ici que le port =2200= a été utilisé au lieu de =8080=. Il
faudrait alors adapter toutes les URLs de ce document, pour utiliser à
la place =http://localhost:2200=. De façon similaire, il faudrait
configurer le client SSH pour se connecter au port =2201= (=ssh -p 2201 vagrant@localhost=).

# SUPPRIMÉ, car ne devrait plus poser de pbm sur le port 8080 du fait du 'auto_correct: true' :

# ** Si la redirection de de ports ne fonctionne pas, que faire ?

# Le démarrage de la machine virtuelle effectue une redirection
# (/forward/)du port =80= (HTTP) du /guest/, vers le port =8080= de
# l'/hôte/, et respectivement, du port =22= (SSH) vers le port
# =2222=. Il se peut qu'une telle redirection soit interdite
# (/firewall/) ou impossible (par exemple si une autre application de
# l'hôte utilise déjà le port =8080=).

# #+BEGIN_example
# Vagrant cannot forward the specified ports on this VM, since they
# would collide with some other application that is already listening
# on these ports. The forwarded port to 8080 is already in use
# on the host machine.

# To fix this, modify your current projects Vagrantfile to use another
# port. Example, where '1234' would be replaced by a unique host port:

#   config.vm.network :forwarded_port, guest: 80, host: 1234

# Sometimes, Vagrant will attempt to auto-correct this for you. In this
# case, Vagrant was unable to. This is usually because the guest machine
# is in a state which doesn't allow modifying port forwarding.
# #+END_example

# # Il est alors possible de modifier le fichier =Vagrantfile= (qui a été
# # généré dans le dossier de travail lors du =vagrant init=) pour
# # utiliser un autre port, par exemple =8081=. Il faudra alors adapter
# # toutes les URLs de ce document, pour utiliser à la place
# # =http://localhost:8081=. De façon similaire, il faudra configurer le
# # client SSH pour se connecter au port =2223= (=ssh -p 2223 vagrant@localhost=).

# # Pour cela :
# # 1. éditer le fichier =Vagrantfile= et chercher la section commentée suivante :
# #    #+BEGIN_example
# #    # Create a forwarded port mapping which allows access to a specific port
# #    # within the machine from a port on the host machine. In the example below,
# #    # accessing "localhost:8080" will access port 80 on the guest machine.
# #    # config.vm.network "forwarded_port", guest: 80, host: 8080
# #    #+END_example

# # 2. après cette section, insérer une nouvelle ligne de la forme :
# #    #+BEGIN_example
# #    config.vm.network :forwarded_port, guest: 80, host: 8081
# #    config.vm.network :forwarded_port, guest: 22, host: 2223
# #    #+END_example

# # 3. relancer =vagrant up=

# Il est alors possible de modifier la machine virtuelle qui vient
# d'être créée, depuis VirtualBox, pour utiliser un autre port, par
# exemple =8081=.

# La configuration se fait dans le dialogue de /Configuration/ de la
# machine virtuelle, dans la section /Réseau/, sous /Avancé/
# *Redirection de ports*.

# Il faudra donc adapter toutes les URLs de ce document, pour utiliser
# à la place =http://localhost:8081=. De façon similaire, il faudra
# configurer le client SSH pour se connecter au port =2223= (=ssh -p 2223 vagrant@localhost=).

** =vagrant ssh= échoue, sous Windows

Si vous n'avez pas installé un client SSH, ou si vous n'avez pas
configuré sa disponibilité dans le PATH, il y a de fortes chances que
vous voyiez un message du genre :
#+BEGIN_example
`ssh` executable not found in any directories in the %PATH% variable. Is an
 SSH client installed? Try installing Cygwin, MinGW or Git, all of which
 contain an SSH client. Or use your favorite SSH client with the following
 authentication information shown below:
 Host: 127.0.0.1
 Port: 2222
 Username: vagrant
 Private key: C:/Users/olivier/.vagrant.d/insecure_private_key
#+END_example

En effet, comme l'indique ce message, en plus de l'installation de Vagrant et VirtualBox, il est nécessaire
d'installer un client SSH que Vagrant pourra utiliser pour se
connecter (avec une clé privée particulière) de façon transparente à
l'intérieur du /guest/.

Sur les systèmes Windows, il est probable qu'aucun client SSH ne sera
installé par défaut.

Ceci est une FAQ Vagrant, pour laquelle de nombreuses ressources
Internet sont disponibles. 

Parmi les solutions possibles, nous avons préféré l'installation de
[[http://git-scm.com/download/win][Git pour windows]]. À
l'installation, dans le dialogue de configuration "/Adjusting your
PATH environment/", choisissez l'option "/Use Git from Bash only/". Il
suffira alors de lancer les commandes Vagrant (comme =vagrant ssh=)
depuis /Git Bash/ plutôt que depuis l'invite de commandes standard de
Windows.

Contactez les forums du MOOC si vous n'y arrivez pas par vous-même.

** Comment me connecter via SSH à la VM vagrant

Normalement, la commande =vagrant ssh= permet de faire cela de façon
transparente.

Sinon, n'importe quel client SSH fera l'affaire : se connecter avec
l'utilisateur =vagrant= et le mot-de-passe =vagrant= sur le port 2222
de l'/hôte/ (redirigé vers le port 22 du /guest/) : =ssh -p 2222 vagrant@localhost= (mot de passe : =vagrant=)


** TODO J'ai écrasé la base de données, que faire

** Comment mettre à jour ma machine virtuelle

Dans la plupart des cas, il n'est pas nécessaire de réinstaller la VM à partir d'une nouvelle version de la box : une mise à jour partielle sera suffisante.

*** TODO Mise à jour partielle
Il est possible de metre à jour via internet une partie des scripts et
applications installés sur la machine

- apt-get dist-upgrade ??
- maj-maj
- ...

*** TODO Réinstallation de la machine virtuelle

Pour réinstaller une machine virtuelle complète :
- =vagrant destroy= dans le dossier de travail
- =suppression du dossier de travail=
- =vagrant init oberger/moocbdvm=
- =vagrant box outdated= 

  Vérifie sur =vagrantcloud.com= si une mise-à-jour de la box Vagrant
  a été publiée :
  #+BEGIN_example
  Checking if box 'oberger/moocbdvm' is up to date...
  A newer version of the box 'oberger/moocbdvm' is available! You currently
  have version '0.1.0'. The latest is version '42.0'. Run
  `vagrant box update` to update.
  #+END_example
- =vagrant box update=, si nécessaire /(si une mise-à-jour disponible doit effectivement être installée)/
- =vagrant up=

** TODO Si j'ai déjà un autre virtualiseur, puis-je convertir la VM ?

** Je suis sous Windows et je rencontre un problème d'encodage
Si vous rencontrez un message du type
#+BEGIN_example
Chemin/Vers/Vagrant/embedded/gems/gems/childprocess-0.3.9/lib/childprocess/wind
ows/process_builder.rb:63:in `join': incompatible character encodings: CP850 and
 Windows-1252 (Encoding::CompatibilityError)
#+END_example

- Ouvrir une invit de commande et entrer la commande =SET VAGRANT_HOME=X:/Chemin/De/Votre/Choix= où X correspond au disque de votre choix (C ou D par exemple).
*ATTENTION: Il est nécessaire de refaire cette manipulation après chaque démarrage de la machine si vous souhaitez utiliser vagrant*

- Ouvrir le fichier X:\Chemin\Vers\Vagrant\embedded\gems\gems\vagrant-1.6.3\bin\vagrant avec un éditeur de texte. Le bloc-note est déconseillé car il rend l'édition difficile.

-Une fois le fichier ouvert, rajouter ces deux lignes après la première ligne du fichier:
# A tenir à jour avec l'encodage par défault de windows
#+BEGIN_example
Encoding.default_external = Encoding.find('Windows-1252')
Encoding.default_internal = Encoding.find('Windows-1252')
#+END_example

- Enregistrer le fichier, c'est bon, vous pouvez reprendre votre utilisation de vagrant.

* TODOs                                                            :noexport:

** TODO Documenter la publication de la box

- box uploadée sur partage
- ajoutée dans vagrantcloud (référencée par son URL de download de partage)

** TODO Customiser phppgadmin pour utiliser le français par défaut plutôt que auto pour la langue de l'interface ?
dans /etc/phppgadmin/config.inc.php :
 $conf['default_lang'] = 'french';

** DONE Customization de la locale par défaut à français ?
CLOSED: [2014-08-11 lun. 11:14]
#+BEGIN_example
cat preseed.txt 
locales locales/locales_to_be_generated multiselect     en_US.UTF-8 UTF-8 fr_FR.UTF-8 UTF-8
locales locales/default_environment_locale      select  fr_FR.UTF-8
DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true dpkg-reconfigure locales
#+END_example

Pas nécessaire : géré par la construction de la box dans bootstrap-vz

** DONE Customization du miroir par défait sur ftp.fr.debian.org ?
CLOSED: [2014-08-07 jeu. 09:21]
#+BEGIN_example
deb http://ftp.fr.debian.org/debian jessie main contrib non-free 
deb-src http://ftp.fr.debian.org/debian jessie main contrib non-free 

deb http://security.debian.org/ jessie/updates main contrib non-free 
deb-src http://security.debian.org/ jessie/updates main contrib non-free 

# jessie-updates, previously known as 'volatile'
deb http://ftp.fr.debian.org/debian jessie-updates main contrib non-free 
deb-src http://ftp.fr.debian.org/debian jessie-updates main contrib non-free 
#+END_example

Idem: pas nécessaire : géré par bootstrap-vz dans le manifest .json

** DONE Customization du keymap
CLOSED: [2014-08-11 lun. 15:00]

#+BEGIN_example
# cat keymap-preseed.txt 
console-data	console-data/keymap/policy	select	Select keymap from arch list
console-data	console-data/keymap/family	select	azerty
console-data	console-data/keymap/azerty/layout	select	French
console-data	console-data/keymap/azerty/french/variant	select	With Euro (latin 9)


debconf-set-selections keymap-preseed.txt 
DEBIAN_FRONTEND=noninteractive DEBCONF_NONINTERACTIVE_SEEN=true dpkg-reconfigure console-data

# pas nécessaire :
# dpkg-reconfigure keyboard-configuration

service keyboard-setup restart
#+END_example

** DONE Faire une version GUI avec env de bureau complet ?
CLOSED: [2014-08-11 lun. 22:23]
peut-être juste une option de vagrant up ?

DONE : fait par ajout d'un script install-gui.sh - Cf. + haut

* À propos de la Box Vagrant du MOOC

** Architecture technique

La machine virtuelle déployée par la /box/ Vagrant est basée sur un
système GNU/Linux ([[http://www.debian.org/][Debian]] /jessie/).

Nous avons essayé de le rendre aussi léger que possible, mais portable
sur tout système cible récent dans lequel le gestionnaire de
machines virtuelles VirtualBox est disponible (couple Vagrant et VirtualBox).

La fabrication de la box Vagrant repose sur l'utilisation de
[[http://andsens.github.io/bootstrap-vz/][bootstrap-vz]] pour l'installation du système Debian de base, complétée
par des scripts de /provisionning/ que nous avons développés
(disponibles sur ...)

** Utilité dans des contextes différents

Bien que les exemples du cours soit relativement simples, nous avons
essayé de nous baser, pour cet environnement, sur une solution
réaliste utilisée dans le monde professionnel (Debian, PostreSQL,
phpPgAdmin, etc.).

Si la solution de virtualisation choisie ne convient pas à vos
contraintes, mais que vous avez installé un autre environnement
PostgreSQL + Apache/PHP, il est toujours possible d'installer
manuellement l'application d'exerciseur que nous avons développée,
mais nous ne pouvons nous engager à fournir un support sur celle-ci.

* Copyright

/This document is (C) Copyright 2014 by Stephane Germain and Institut Mines-Telecom and is licensed under a/ [[http://creativecommons.org/licenses/by-sa/4.0/][/Creative Commons Attribution-ShareAlike 4.0 International License/]].

* Footnotes

[fn:1] Disponible dans le repository dans =Provisionning/Vagrantfile=

[fn:2] Nous avons réalisé nos tests sur des ordinateurs portables
professionnels en systèmes GNU/Linux ou Microsoft Windows 7
professional.

[fn:3] autrement appelé /terminal/, /shell/, selon les systèmes
d'exploitation. Sur Windows, on peut aussi utiliser l'outil /Windows Powershell/, ou
/Git bash/, si ce dernier a été installé.

[fn:4] Une fois l'installation de la box réalisée, l'utilisation de la machine virtuelle se fait en local, sans avoir besoin d'une connexion internet.

[fn:5] Si votre système n'est pas 64 bits, attention, certaines
commandes devront être modifiées pour télécharger la bonne version de
la box Vagrant. Cf . [[*J'ai un système 32 bits, est-ce que ça marchera pour moi ?][J'ai un système 32 bits, est-ce que ça marchera pour moi ?]].


# Local Variables:
# org-html-postamble-format: (("fr" "<p class=\"author\">Auteur: %a</p>\n<p class=\"date\">Date: %C</p>\n<p class=\"creator\">%c</p>"))
# End:
